import { MapExploiter } from "./MapExploiter.js";
import { Tile } from "./Tile.js";
import { TileGenerator } from "./TileGenerator.js";

export class TileExploiter extends Tile {
  /** @type {Number | null} */
  #city_id = null;
  /** @type {TileExploiter[]} */
  #neighbors = [];

  /** @type {Number} */
  #populations = 0;

  /** @type {Biome} */
  #biome;
  /** @type {Resource} */
  #resource;
  /** @type {Building} */
  #building = null;

  /** @type {TypeAction[]} */
  actionsPossible = [];

  /**
   * @param {TileGenerator} tileGenerator
   */
  constructor(tileGenerator) {
    super(tileGenerator.row, tileGenerator.col);
    this.#biome = tileGenerator.biome;
    this.#resource = tileGenerator.resource;
    if (tileGenerator.isCapitalCity) this.#city_id = 1;
  }

  get city_id() {
    return this.#city_id;
  }
  get populations() {
    return this.#populations;
  }
  get biome() {
    return this.#biome;
  }
  get resource() {
    return this.#resource;
  }
  get building() {
    return this.#building;
  }

  /**
   * @param {TileExploiter[]} value
   */
  set neighbors(value) {
    this.#neighbors = value;
  }

  addAction(stars, action) {
    if (stars > MapExploiter.cost[action]) this.actionsPossible.push(action);
  }

  defineActionsPossible(stars) {
    this.actionsPossible = [];
    // if (["field", "forest"].includes(this.#biome)) this.addAction(stars, "road");
    if (this.#city_id) {
      if (this.#building) {
        // this.actionsPossible.push("destroy");
      } else {
        if (this.#biome === "mountain") {
          if (this.#resource === "metal") this.addAction(stars, "mine");
          this.addAction(stars, "mountain temple");
        }
        if (this.#biome === "forest") {
          if (this.#resource === "animal") this.addAction(stars, "hunting");
          this.addAction(stars, "forest temple");
          this.addAction(stars, "clear forest");
          this.addAction(stars, "burn forest");
          this.addAction(stars, "lumber hut");
        }
        if (this.#biome === "field") {
          if (this.#resource === "fruit") this.addAction(stars, "harvest");
          if (this.#resource === "crop") this.addAction(stars, "farm");
          this.addAction(stars, "temple");
          this.addAction(stars, "grow forest");
        }
      }
    }
  }

  /**
   * @param {TypeAction} action
   */
  applyAction(action) {
    let indexAction = this.actionsPossible.indexOf(action);
    if (indexAction !== -1) {
      switch (action) {
        // case "destroy":
        //   //TODO modify populations
        //   this.#building = null;
        //   break;
        case "hunting":
        case "harvest":
          this.#resource = null;
          this.#populations += MapExploiter.pop[action];
          this.actionsPossible.slice(indexAction, 1);
          break;
        case "farm":
        case "mine":
        case "lumber hut":
        case "mountain temple":
        case "forest temple":
        case "temple":
          this.#building = action;
          this.#populations += MapExploiter.pop[action];
          break;
        case "clear forest":
          this.#biome = "field";
          this.#resource = null;
          break;
        case "grow forest":
          this.#biome = "forest";
          this.#resource = null;
          break;
        case "burn forest":
          this.#biome = "field";
          this.#resource = "crop";
          break;
        default:
      }
      this.defineActionsPossible();
    }
  }
}
